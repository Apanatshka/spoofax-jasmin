
regular tree grammar
  start Start
  productions
    ListStarOfMethod0              -> ListPlusOfMethod0
    ListStarOfMethod0              -> <nil>()
    ListStarOfMethod0              -> <conc>(ListStarOfMethod0,ListStarOfMethod0)
    ListPlusOfMethod0              -> <conc>(ListStarOfMethod0,ListPlusOfMethod0)
    ListPlusOfMethod0              -> <conc>(ListPlusOfMethod0,ListStarOfMethod0)
    ListPlusOfMethod0              -> <conc>(ListPlusOfMethod0,ListPlusOfMethod0)
    ListPlusOfMethod0              -> <cons>(Method,ListStarOfMethod0)
    ListStarOfField0               -> ListPlusOfField0
    ListStarOfField0               -> <nil>()
    ListStarOfField0               -> <conc>(ListStarOfField0,ListStarOfField0)
    ListPlusOfField0               -> <conc>(ListStarOfField0,ListPlusOfField0)
    ListPlusOfField0               -> <conc>(ListPlusOfField0,ListStarOfField0)
    ListPlusOfField0               -> <conc>(ListPlusOfField0,ListPlusOfField0)
    ListPlusOfField0               -> <cons>(Field,ListStarOfField0)
    ListStarOfStatement0           -> ListPlusOfStatement0
    ListStarOfStatement0           -> <nil>()
    ListStarOfStatement0           -> <conc>(ListStarOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0           -> <conc>(ListStarOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0           -> <conc>(ListPlusOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0           -> <conc>(ListPlusOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0           -> <cons>(Statement,ListStarOfStatement0)
    ListStarOfMethodAccess0        -> ListPlusOfMethodAccess0
    ListStarOfMethodAccess0        -> <nil>()
    ListStarOfMethodAccess0        -> <conc>(ListStarOfMethodAccess0,ListStarOfMethodAccess0)
    ListPlusOfMethodAccess0        -> <conc>(ListStarOfMethodAccess0,ListPlusOfMethodAccess0)
    ListPlusOfMethodAccess0        -> <conc>(ListPlusOfMethodAccess0,ListStarOfMethodAccess0)
    ListPlusOfMethodAccess0        -> <conc>(ListPlusOfMethodAccess0,ListPlusOfMethodAccess0)
    ListPlusOfMethodAccess0        -> <cons>(MethodAccess,ListStarOfMethodAccess0)
    ListStarOfLookupEntry0         -> ListPlusOfLookupEntry0
    ListStarOfLookupEntry0         -> <nil>()
    ListStarOfLookupEntry0         -> <conc>(ListStarOfLookupEntry0,ListStarOfLookupEntry0)
    ListPlusOfLookupEntry0         -> <conc>(ListStarOfLookupEntry0,ListPlusOfLookupEntry0)
    ListPlusOfLookupEntry0         -> <conc>(ListPlusOfLookupEntry0,ListStarOfLookupEntry0)
    ListPlusOfLookupEntry0         -> <conc>(ListPlusOfLookupEntry0,ListPlusOfLookupEntry0)
    ListPlusOfLookupEntry0         -> <cons>(LookupEntry,ListStarOfLookupEntry0)
    ListStarOfTableEntry0          -> ListPlusOfTableEntry0
    ListStarOfTableEntry0          -> <nil>()
    ListStarOfTableEntry0          -> <conc>(ListStarOfTableEntry0,ListStarOfTableEntry0)
    ListPlusOfTableEntry0          -> <conc>(ListStarOfTableEntry0,ListPlusOfTableEntry0)
    ListPlusOfTableEntry0          -> <conc>(ListPlusOfTableEntry0,ListStarOfTableEntry0)
    ListPlusOfTableEntry0          -> <conc>(ListPlusOfTableEntry0,ListPlusOfTableEntry0)
    ListPlusOfTableEntry0          -> <cons>(TableEntry,ListStarOfTableEntry0)
    ListStarOfFieldExt0            -> ListPlusOfFieldExt0
    ListStarOfFieldExt0            -> <nil>()
    ListStarOfFieldExt0            -> <conc>(ListStarOfFieldExt0,ListStarOfFieldExt0)
    ListPlusOfFieldExt0            -> <conc>(ListStarOfFieldExt0,ListPlusOfFieldExt0)
    ListPlusOfFieldExt0            -> <conc>(ListPlusOfFieldExt0,ListStarOfFieldExt0)
    ListPlusOfFieldExt0            -> <conc>(ListPlusOfFieldExt0,ListPlusOfFieldExt0)
    ListPlusOfFieldExt0            -> <cons>(FieldExt,ListStarOfFieldExt0)
    ListStarOfFieldAccess0         -> ListPlusOfFieldAccess0
    ListStarOfFieldAccess0         -> <nil>()
    ListStarOfFieldAccess0         -> <conc>(ListStarOfFieldAccess0,ListStarOfFieldAccess0)
    ListPlusOfFieldAccess0         -> <conc>(ListStarOfFieldAccess0,ListPlusOfFieldAccess0)
    ListPlusOfFieldAccess0         -> <conc>(ListPlusOfFieldAccess0,ListStarOfFieldAccess0)
    ListPlusOfFieldAccess0         -> <conc>(ListPlusOfFieldAccess0,ListPlusOfFieldAccess0)
    ListPlusOfFieldAccess0         -> <cons>(FieldAccess,ListStarOfFieldAccess0)
    ListStarOfClassAccess0         -> ListPlusOfClassAccess0
    ListStarOfClassAccess0         -> <nil>()
    ListStarOfClassAccess0         -> <conc>(ListStarOfClassAccess0,ListStarOfClassAccess0)
    ListPlusOfClassAccess0         -> <conc>(ListStarOfClassAccess0,ListPlusOfClassAccess0)
    ListPlusOfClassAccess0         -> <conc>(ListPlusOfClassAccess0,ListStarOfClassAccess0)
    ListPlusOfClassAccess0         -> <conc>(ListPlusOfClassAccess0,ListPlusOfClassAccess0)
    ListPlusOfClassAccess0         -> <cons>(ClassAccess,ListStarOfClassAccess0)
    ListStarOfImplementsSpec0      -> ListPlusOfImplementsSpec0
    ListStarOfImplementsSpec0      -> <nil>()
    ListStarOfImplementsSpec0      -> <conc>(ListStarOfImplementsSpec0,ListStarOfImplementsSpec0)
    ListPlusOfImplementsSpec0      -> <conc>(ListStarOfImplementsSpec0,ListPlusOfImplementsSpec0)
    ListPlusOfImplementsSpec0      -> <conc>(ListPlusOfImplementsSpec0,ListStarOfImplementsSpec0)
    ListPlusOfImplementsSpec0      -> <conc>(ListPlusOfImplementsSpec0,ListPlusOfImplementsSpec0)
    ListPlusOfImplementsSpec0      -> <cons>(ImplementsSpec,ListStarOfImplementsSpec0)
    ListStarOfStringChar0          -> <string>
    ListPlusOfStringChar0          -> <string>
    ListStarOfIdentifier0          -> <string>
    ListPlusOfIdentifier0          -> <string>
    ListStarOfParameterDescriptor0 -> ListPlusOfParameterDescriptor0
    ListStarOfParameterDescriptor0 -> <nil>()
    ListStarOfParameterDescriptor0 -> <conc>(ListStarOfParameterDescriptor0,ListStarOfParameterDescriptor0)
    ListPlusOfParameterDescriptor0 -> <conc>(ListStarOfParameterDescriptor0,ListPlusOfParameterDescriptor0)
    ListPlusOfParameterDescriptor0 -> <conc>(ListPlusOfParameterDescriptor0,ListStarOfParameterDescriptor0)
    ListPlusOfParameterDescriptor0 -> <conc>(ListPlusOfParameterDescriptor0,ListPlusOfParameterDescriptor0)
    ListPlusOfParameterDescriptor0 -> <cons>(ParameterDescriptor,ListStarOfParameterDescriptor0)
    JasminFile                     -> JBCFile(JasminHeader,ListStarOfField0,ListStarOfMethod0)
    Start                          -> JasminFile
    Label                          -> JBCLabel(LabelName)
    Statement                      -> Label
    Statement                      -> Directive
    Statement                      -> PCInstruction
    MethodAccess                   -> ABSTRACT()
    MethodAccess                   -> NATIVE()
    MethodAccess                   -> SYNCHRONIZED()
    MethodAccess                   -> FINAL()
    MethodAccess                   -> STATIC()
    MethodAccess                   -> PROTECTED()
    MethodAccess                   -> PRIVATE()
    MethodAccess                   -> PUBLIC()
    Method                         -> JBCMethod(ListStarOfMethodAccess0,MethodName,MethodDescriptor,ListStarOfStatement0)
    Directive                      -> JBCVarDecl(Int,VarName,FieldDescriptor,LabelRef,LabelRef)
    Directive                      -> JBCCatch(ClassRef,LabelRef,LabelRef,LabelRef)
    Directive                      -> JBCThrows(ClassRef)
    Directive                      -> JBCLine(Int)
    Directive                      -> JBCLimitLocals(Int)
    Directive                      -> JBCLimitStack(Int)
    PCInstruction                  -> Instruction
    PCInstruction                  -> PC(Int,Instruction)
    Instruction                    -> BREAKPOINT()
    Instruction                    -> NOP()
    Instruction                    -> MONITOREXIT()
    Instruction                    -> MONITORENTER()
    Instruction                    -> ATHROW()
    Instruction                    -> ARETURN()
    Instruction                    -> DRETURN()
    Instruction                    -> FRETURN()
    Instruction                    -> LRETURN()
    Instruction                    -> IRETURN()
    Instruction                    -> RETURN()
    Instruction                    -> INVOKEINTERFACE(MethodRef,Int)
    Instruction                    -> INVOKESTATIC(MethodRef)
    Instruction                    -> INVOKEVIRTUAL(MethodRef)
    Instruction                    -> INVOKESPECIAL(MethodRef)
    Instruction                    -> GOTO_W(LabelRef)
    Instruction                    -> GOTO(LabelRef)
    LookupEntry                    -> NPAIR(Int,LabelRef)
    TableEntry                     -> Jump(LabelRef)
    Instruction                    -> Lookup(ListStarOfLookupEntry0,LabelRef)
    Instruction                    -> Table(Int,ListStarOfTableEntry0,LabelRef)
    Instruction                    -> IF_ACMPNE(Target)
    Instruction                    -> IF_ACMPEQ(Target)
    Instruction                    -> IF_ICMPGE(Target)
    Instruction                    -> IF_ICMPGT(Target)
    Instruction                    -> IF_ICMPNE(Target)
    Instruction                    -> IF_ICMPLE(Target)
    Instruction                    -> IF_ICMPLT(Target)
    Instruction                    -> IF_ICMPEQ(Target)
    Instruction                    -> IFNONNULL(Target)
    Instruction                    -> IFNULL(Target)
    Instruction                    -> IFGE(Target)
    Instruction                    -> IFGT(Target)
    Instruction                    -> IFNE(Target)
    Instruction                    -> IFLE(Target)
    Instruction                    -> IFLT(Target)
    Instruction                    -> IFEQ(Target)
    Target                         -> RelOffset
    Target                         -> LabelRef
    RelOffset                      -> RelativeBwd(Int)
    RelOffset                      -> RelativeFwd(Int)
    LabelRef                       -> Absolute(Int)
    Instruction                    -> SWAP()
    Instruction                    -> DUP2_X2()
    Instruction                    -> DUP_X2()
    Instruction                    -> DUP2_X1()
    Instruction                    -> DUP_X1()
    Instruction                    -> DUP2()
    Instruction                    -> DUP()
    Instruction                    -> POP2()
    Instruction                    -> POP()
    Instruction                    -> INSTANCEOF(ClassRef)
    Instruction                    -> CHECKCAST(ClassRef)
    Instruction                    -> ARRAYLENGTH()
    Instruction                    -> AASTORE()
    Instruction                    -> DASTORE()
    Instruction                    -> FASTORE()
    Instruction                    -> SASTORE()
    Instruction                    -> CASTORE()
    Instruction                    -> BASTORE()
    Instruction                    -> LASTORE()
    Instruction                    -> IASTORE()
    Instruction                    -> AALOAD()
    Instruction                    -> DALOAD()
    Instruction                    -> FALOAD()
    Instruction                    -> SALOAD()
    Instruction                    -> CALOAD()
    Instruction                    -> BALOAD()
    Instruction                    -> LALOAD()
    Instruction                    -> IALOAD()
    Instruction                    -> PUTSTATIC(FieldRef)
    Instruction                    -> GETSTATIC(FieldRef)
    Instruction                    -> PUTFIELD(FieldRef)
    Instruction                    -> GETFIELD(FieldRef)
    Instruction                    -> MULTIANEWARRAY(ArrayType,Int)
    Instruction                    -> ANEWARRAY(ArrayType)
    Instruction                    -> ANEWARRAY(ClassRef)
    Instruction                    -> NEWARRAY(BaseTypeName)
    Instruction                    -> NEW(ClassRef)
    Instruction                    -> D2F()
    Instruction                    -> D2L()
    Instruction                    -> D2I()
    Instruction                    -> F2L()
    Instruction                    -> F2I()
    Instruction                    -> L2I()
    Instruction                    -> I2C()
    Instruction                    -> I2S()
    Instruction                    -> I2B()
    Instruction                    -> F2D()
    Instruction                    -> L2D()
    Instruction                    -> L2F()
    Instruction                    -> I2D()
    Instruction                    -> I2F()
    Instruction                    -> I2L()
    Instruction                    -> LCMP()
    Instruction                    -> DCMPL()
    Instruction                    -> DCMPG()
    Instruction                    -> FCMPL()
    Instruction                    -> FCMPG()
    Amount                         -> Neg(Int)
    Amount                         -> Int
    Instruction                    -> IINC(VarRef,Amount)
    Instruction                    -> DSUB()
    Instruction                    -> DREM()
    Instruction                    -> DNEG()
    Instruction                    -> DMUL()
    Instruction                    -> DDIV()
    Instruction                    -> DADD()
    Instruction                    -> FSUB()
    Instruction                    -> FREM()
    Instruction                    -> FNEG()
    Instruction                    -> FMUL()
    Instruction                    -> FDIV()
    Instruction                    -> FADD()
    Instruction                    -> LXOR()
    Instruction                    -> LUSHR()
    Instruction                    -> LSUB()
    Instruction                    -> LSHR()
    Instruction                    -> LSHL()
    Instruction                    -> LREM()
    Instruction                    -> LOR()
    Instruction                    -> LNEG()
    Instruction                    -> LMUL()
    Instruction                    -> LDIV()
    Instruction                    -> LAND()
    Instruction                    -> LADD()
    Instruction                    -> IXOR()
    Instruction                    -> IUSHR()
    Instruction                    -> ISUB()
    Instruction                    -> ISHR()
    Instruction                    -> ISHL()
    Instruction                    -> IREM()
    Instruction                    -> IOR()
    Instruction                    -> INEG()
    Instruction                    -> IMUL()
    Instruction                    -> IDIV()
    Instruction                    -> IAND()
    Instruction                    -> IADD()
    Instruction                    -> DSTORE_3()
    Instruction                    -> DSTORE_2()
    Instruction                    -> DSTORE_1()
    Instruction                    -> DSTORE_0()
    Instruction                    -> FSTORE_3()
    Instruction                    -> FSTORE_2()
    Instruction                    -> FSTORE_1()
    Instruction                    -> FSTORE_0()
    Instruction                    -> LSTORE_3()
    Instruction                    -> LSTORE_2()
    Instruction                    -> LSTORE_1()
    Instruction                    -> LSTORE_0()
    Instruction                    -> ASTORE_3()
    Instruction                    -> ASTORE_2()
    Instruction                    -> ASTORE_1()
    Instruction                    -> ASTORE_0()
    Instruction                    -> ISTORE_3()
    Instruction                    -> ISTORE_2()
    Instruction                    -> ISTORE_1()
    Instruction                    -> ISTORE_0()
    Instruction                    -> ASTORE(VarRef)
    Instruction                    -> DSTORE(VarRef)
    Instruction                    -> FSTORE(VarRef)
    Instruction                    -> LSTORE(VarRef)
    Instruction                    -> ISTORE(VarRef)
    Instruction                    -> FLOAD_3()
    Instruction                    -> FLOAD_2()
    Instruction                    -> FLOAD_1()
    Instruction                    -> FLOAD_0()
    Instruction                    -> DLOAD_3()
    Instruction                    -> DLOAD_2()
    Instruction                    -> DLOAD_1()
    Instruction                    -> DLOAD_0()
    Instruction                    -> LLOAD_3()
    Instruction                    -> LLOAD_2()
    Instruction                    -> LLOAD_1()
    Instruction                    -> LLOAD_0()
    Instruction                    -> ALOAD_3()
    Instruction                    -> ALOAD_2()
    Instruction                    -> ALOAD_1()
    Instruction                    -> ALOAD_0()
    Instruction                    -> ILOAD_3()
    Instruction                    -> ILOAD_2()
    Instruction                    -> ILOAD_1()
    Instruction                    -> ILOAD_0()
    Instruction                    -> ALOAD(VarRef)
    Instruction                    -> DLOAD(VarRef)
    Instruction                    -> FLOAD(VarRef)
    Instruction                    -> LLOAD(VarRef)
    Instruction                    -> ILOAD(VarRef)
    Instruction                    -> LDC2_W(Constant)
    Instruction                    -> LDC(Constant)
    Instruction                    -> ACONST_NULL()
    Instruction                    -> DCONST_1()
    Instruction                    -> DCONST_0()
    Instruction                    -> FCONST_2()
    Instruction                    -> FCONST_1()
    Instruction                    -> FCONST_0()
    Instruction                    -> LCONST_1()
    Instruction                    -> LCONST_0()
    Instruction                    -> ICONST_5()
    Instruction                    -> ICONST_4()
    Instruction                    -> ICONST_3()
    Instruction                    -> ICONST_2()
    Instruction                    -> ICONST_1()
    Instruction                    -> ICONST_0()
    Instruction                    -> ICONST_M1()
    Instruction                    -> SIPUSH(Int)
    Instruction                    -> BIPUSH(Int)
    FieldAccess                    -> TRANSIENT()
    FieldAccess                    -> VOLATILE()
    FieldAccess                    -> FINAL()
    FieldAccess                    -> STATIC()
    FieldAccess                    -> PROTECTED()
    FieldAccess                    -> PRIVATE()
    FieldAccess                    -> PUBLIC()
    InitialValue                   -> None()
    InitialValue                   -> InitVal(Constant)
    FieldSignatureSpec             -> None()
    FieldSignatureSpec             -> FieldSig(FieldSignature)
    FieldExt                       -> JBCDeprecated()
    FieldExt                       -> JBCSignature(FieldSignature)
    Field                          -> JBCExtField(ListStarOfFieldAccess0,FieldName,FieldDescriptor,InitialValue,ListStarOfFieldExt0)
    Field                          -> JBCField(ListStarOfFieldAccess0,FieldName,FieldDescriptor,FieldSignatureSpec,InitialValue)
    DeprecatedSpec                 -> None()
    DeprecatedSpec                 -> JBCDeprecated()
    EnclosingSpec                  -> None()
    EnclosingSpec                  -> JBCEnclosing(MethodDescriptor)
    SignatureSpec                  -> None()
    SignatureSpec                  -> JBCSignature(ClassSignature)
    ImplementsSpec                 -> JBCImplements(ClassName)
    SuperSpec                      -> JBCSuper(ClassName)
    ClassAccess                    -> SUPER()
    ClassAccess                    -> ABSTRACT()
    ClassAccess                    -> INTERFACE()
    ClassAccess                    -> FINAL()
    ClassAccess                    -> PUBLIC()
    ClassSpec                      -> JBCInterface(ListStarOfClassAccess0,ClassName)
    ClassSpec                      -> JBCClass(ListStarOfClassAccess0,ClassName)
    SourceSpec                     -> None()
    SourceSpec                     -> JBCSource(String)
    MinorVersion                   -> None()
    MinorVersion                   -> Minor(Int)
    MajorVersion                   -> Major(Int)
    BytecodeSpec                   -> None()
    BytecodeSpec                   -> JBCVersion(MajorVersion,MinorVersion)
    JasminHeader                   -> JBCHeader(BytecodeSpec,SourceSpec,ClassSpec,SuperSpec,ListStarOfImplementsSpec0,SignatureSpec,EnclosingSpec,DeprecatedSpec)
    Constant                       -> String
    BaseTypeName                   -> BooleanName()
    BaseTypeName                   -> ShortName()
    BaseTypeName                   -> LongName()
    BaseTypeName                   -> IntName()
    BaseTypeName                   -> FloatName()
    BaseTypeName                   -> DoubleName()
    BaseTypeName                   -> CharName()
    BaseTypeName                   -> ByteName()
    FieldSignature                 -> <string>
    ClassSignature                 -> <string>
    HexDigit                       -> <string>
    StringChar                     -> <string>
    String                         -> <string>
    MethodRef                      -> JBCMethodRef(ClassRef,MRef,MethodDescriptor)
    FieldRef                       -> JBCFieldRef(ClassRef,FRef,FieldDescriptor)
    MRef                           -> MRef(MethodName)
    FRef                           -> FRef(FieldName)
    LabelRef                       -> LabelRef(LabelName)
    VarRef                         -> VarNum(Int)
    ClassRef                       -> CRef(ClassName)
    VarName                        -> SQIdentifier
    MethodName                     -> Init()
    MethodName                     -> Identifier
    FieldName                      -> Identifier
    ClassName                      -> QualifiedName
    LabelName                      -> <string>
    QualifiedName                  -> <string>
    SQIdentifier                   -> <string>
    Identifier                     -> <string>
    ArrayType                      -> Array(ComponentType)
    ObjectType                     -> Reference(ClassRef)
    MethodDescriptor               -> JBCMethodDesc(ListStarOfParameterDescriptor0,ReturnDescriptor)
    ComponentType                  -> FieldType
    BaseType                       -> Boolean()
    BaseType                       -> Short()
    BaseType                       -> Long()
    BaseType                       -> Int()
    BaseType                       -> Float()
    BaseType                       -> Double()
    BaseType                       -> Char()
    BaseType                       -> Byte()
    FieldType                      -> ArrayType
    FieldType                      -> ObjectType
    FieldType                      -> BaseType
    ReturnDescriptor               -> Void()
    ReturnDescriptor               -> FieldType
    ParameterDescriptor            -> FieldType
    FieldDescriptor                -> JBCFieldDesc(FieldType)
    Constant                       -> Int
    Int                            -> <string>
    EOF                            -> <string>
