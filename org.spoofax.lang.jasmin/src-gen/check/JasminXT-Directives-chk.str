module src-gen/check/JasminXT-Directives-chk

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  src-gen/signatures/JasminXT-Directives-sig


imports
  src-gen/signatures/JasminXT-Descriptors-sig
  src-gen/signatures/JasminXT-Names-sig
  src-gen/signatures/JasminXT-Numbers-sig
  src-gen/signatures/JasminXT-Strings-sig
  src-gen/signatures/JasminXT-Annotations-sig


imports
  src-gen/check/JasminXT-Descriptors-chk
  src-gen/check/JasminXT-Names-chk
  src-gen/check/JasminXT-Numbers-chk
  src-gen/check/JasminXT-Strings-chk
  src-gen/check/JasminXT-Annotations-chk


strategies
  jasmin-check-SDF-start-symbols =
    jasmin-check-Directive

  jasmin-check-SDF-start-symbols =
    jasmin-check-StackDirOffset

  jasmin-check-SDF-start-symbols =
    jasmin-check-StackDirLocalVar

  jasmin-check-SDF-start-symbols =
    jasmin-check-StackDirStackVar


strategies
  jasmin-check-example =
    jasmin-check-Directive

  jasmin-check-example =
    jasmin-check-StackDirOffset

  jasmin-check-example =
    jasmin-check-StackDirLocalVar

  jasmin-check-example =
    jasmin-check-StackDirStackVar

  jasmin-check-example =
    jasmin-check-VerificationType

  jasmin-check-Directive :
    JBCLimitStack(t1__) -> <id>
    with <(check-Int <+ error-Int)> t1__

  is-Directive-with-constructor =
    ?JBCLimitStack(_)

  jasmin-check-Directive :
    JBCLimitLocals(t1__) -> <id>
    with <(check-Int <+ error-Int)> t1__

  is-Directive-with-constructor =
    ?JBCLimitLocals(_)

  jasmin-check-Directive :
    JBCLine(t1__) -> <id>
    with <(check-Int <+ error-Int)> t1__

  is-Directive-with-constructor =
    ?JBCLine(_)

  jasmin-check-Directive :
    JBCVarDecl(t1__, t2__, t3__, t4__, t5__) -> <id>
    with <(check-Int <+ error-Int)> t1__
    with <(check-VarName <+ error-VarName)> t2__
    with <(check-FieldDescriptor <+ error-FieldDescriptor)> t3__
    with <(check-LabelRef <+ error-LabelRef)> t4__
    with <(check-LabelRef <+ error-LabelRef)> t5__

  is-Directive-with-constructor =
    ?JBCVarDecl(_, _, _, _, _)

  jasmin-check-Directive :
    JBCThrows(t1__) -> <id>
    with <(check-ClassRef <+ error-ClassRef)> t1__

  is-Directive-with-constructor =
    ?JBCThrows(_)

  jasmin-check-Directive :
    JBCCatch(t1__, t2__, t3__, t4__) -> <id>
    with <(check-ClassRef <+ error-ClassRef)> t1__
    with <(check-LabelRef <+ error-LabelRef)> t2__
    with <(check-LabelRef <+ error-LabelRef)> t3__
    with <(check-LabelRef <+ error-LabelRef)> t4__

  is-Directive-with-constructor =
    ?JBCCatch(_, _, _, _)

  jasmin-check-Directive :
    JBCSignature(t1__) -> <id>
    with <(check-String <+ error-String)> t1__

  is-Directive-with-constructor =
    ?JBCSignature(_)

  jasmin-check-Directive :
    JBCStack(t1__, t2__, t3__) -> <id>
    with <(check-StackDirOffset <+ error-StackDirOffset)> t1__
    with <map(check-StackDirLocalVar <+ error-StackDirLocalVar)> t2__
    with <map(check-StackDirStackVar <+ error-StackDirStackVar)> t3__

  is-Directive-with-constructor =
    ?JBCStack(_, _, _)

  jasmin-check-Directive :
    JBCStack(t1__, t2__, t3__, t4__) -> <id>
    with <(check-Int <+ error-Int)> t1__
    with <(check-StackDirOffset <+ error-StackDirOffset)> t2__
    with <map(check-StackDirLocalVar <+ error-StackDirLocalVar)> t3__
    with <map(check-StackDirStackVar <+ error-StackDirStackVar)> t4__

  is-Directive-with-constructor =
    ?JBCStack(_, _, _, _)

  jasmin-check-Directive :
    JBCDeprecated() -> <id>

  is-Directive-with-constructor =
    ?JBCDeprecated()

  jasmin-check-Directive :
    JBCAttribute(t1__, t2__) -> <id>
    with <(check-AttributeName <+ error-AttributeName)> t1__
    with <(check-FileName <+ error-FileName)> t2__

  is-Directive-with-constructor =
    ?JBCAttribute(_, _)

  jasmin-check-StackDirOffset :
    Offset(t1__) -> <id>
    with <(check-LabelRef <+ error-LabelRef)> t1__

  is-StackDirOffset-with-constructor =
    ?Offset(_)

  jasmin-check-StackDirOffset :
    None() -> <id>

  is-StackDirOffset-with-constructor =
    ?None()

  jasmin-check-StackDirLocalVar :
    LocalVar(t1__) -> <id>
    with <(check-VerificationType <+ error-VerificationType)> t1__

  is-StackDirLocalVar-with-constructor =
    ?LocalVar(_)

  jasmin-check-StackDirStackVar :
    StackVar(t1__) -> <id>
    with <(check-VerificationType <+ error-VerificationType)> t1__

  is-StackDirStackVar-with-constructor =
    ?StackVar(_)

  jasmin-check-VerificationType :
    Top() -> <id>

  is-VerificationType-with-constructor =
    ?Top()

  jasmin-check-VerificationType :
    Integer() -> <id>

  is-VerificationType-with-constructor =
    ?Integer()

  jasmin-check-VerificationType :
    Float() -> <id>

  is-VerificationType-with-constructor =
    ?Float()

  jasmin-check-VerificationType :
    Long() -> <id>

  is-VerificationType-with-constructor =
    ?Long()

  jasmin-check-VerificationType :
    Double() -> <id>

  is-VerificationType-with-constructor =
    ?Double()

  jasmin-check-VerificationType :
    Null() -> <id>

  is-VerificationType-with-constructor =
    ?Null()

  jasmin-check-VerificationType :
    UninitThis() -> <id>

  is-VerificationType-with-constructor =
    ?UninitThis()

  jasmin-check-VerificationType :
    Object(t1__) -> <id>
    with <(check-ClassName <+ error-ClassName)> t1__

  is-VerificationType-with-constructor =
    ?Object(_)

  jasmin-check-VerificationType :
    Uninit(t1__) -> <id>
    with <(check-LabelRef <+ error-LabelRef)> t1__

  is-VerificationType-with-constructor =
    ?Uninit(_)

  is-Directive-with-constructor =
    fail

  is-StackDirOffset-with-constructor =
    fail

  is-StackDirLocalVar-with-constructor =
    fail

  is-StackDirStackVar-with-constructor =
    fail

  is-VerificationType-with-constructor =
    fail

  jasmin-check-Directive :
    amb([h|hs]) -> <check-Directive> h

  jasmin-check-StackDirOffset :
    amb([h|hs]) -> <check-StackDirOffset> h

  jasmin-check-StackDirLocalVar :
    amb([h|hs]) -> <check-StackDirLocalVar> h

  jasmin-check-StackDirStackVar :
    amb([h|hs]) -> <check-StackDirStackVar> h

  jasmin-check-VerificationType :
    amb([h|hs]) -> <check-VerificationType> h

  error-Directive =
    debug(!"Unexpected constructor. Expected constructor from sort Directive instead. ")

  error-StackDirOffset =
    debug(!"Unexpected constructor. Expected constructor from sort StackDirOffset instead. ")

  error-StackDirLocalVar =
    debug(!"Unexpected constructor. Expected constructor from sort StackDirLocalVar instead. ")

  error-StackDirStackVar =
    debug(!"Unexpected constructor. Expected constructor from sort StackDirStackVar instead. ")

  error-VerificationType =
    debug(!"Unexpected constructor. Expected constructor from sort VerificationType instead. ")