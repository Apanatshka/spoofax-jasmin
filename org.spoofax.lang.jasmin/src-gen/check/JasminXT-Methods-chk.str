module src-gen/check/JasminXT-Methods-chk

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  src-gen/signatures/JasminXT-Methods-sig


imports
  src-gen/signatures/JasminXT-Names-sig
  src-gen/signatures/JasminXT-Numbers-sig
  src-gen/signatures/JasminXT-Strings-sig
  src-gen/signatures/JasminXT-Descriptors-sig
  src-gen/signatures/JasminXT-Instructions-sig
  src-gen/signatures/JasminXT-Directives-sig


imports
  src-gen/check/JasminXT-Names-chk
  src-gen/check/JasminXT-Numbers-chk
  src-gen/check/JasminXT-Strings-chk
  src-gen/check/JasminXT-Descriptors-chk
  src-gen/check/JasminXT-Instructions-chk
  src-gen/check/JasminXT-Directives-chk


strategies
  jasmin-check-SDF-start-symbols =
    jasmin-check-Method


strategies
  jasmin-check-example =
    jasmin-check-Method

  jasmin-check-example =
    jasmin-check-MethodAccess

  jasmin-check-Method :
    JBCMethod(t1__, t2__, t3__, t4__) -> <id>
    with <map(check-MethodAccess <+ error-MethodAccess)> t1__
    with <(check-MethodName <+ error-MethodName)> t2__
    with <(check-MethodDescriptor <+ error-MethodDescriptor)> t3__
    with <map(check-Statement <+ error-Statement)> t4__

  is-Method-with-constructor =
    ?JBCMethod(_, _, _, _)

  jasmin-check-MethodAccess :
    PUBLIC() -> <id>

  is-MethodAccess-with-constructor =
    ?PUBLIC()

  jasmin-check-MethodAccess :
    PRIVATE() -> <id>

  is-MethodAccess-with-constructor =
    ?PRIVATE()

  jasmin-check-MethodAccess :
    PROTECTED() -> <id>

  is-MethodAccess-with-constructor =
    ?PROTECTED()

  jasmin-check-MethodAccess :
    STATIC() -> <id>

  is-MethodAccess-with-constructor =
    ?STATIC()

  jasmin-check-MethodAccess :
    FINAL() -> <id>

  is-MethodAccess-with-constructor =
    ?FINAL()

  jasmin-check-MethodAccess :
    SYNCHRONIZED() -> <id>

  is-MethodAccess-with-constructor =
    ?SYNCHRONIZED()

  jasmin-check-MethodAccess :
    NATIVE() -> <id>

  is-MethodAccess-with-constructor =
    ?NATIVE()

  jasmin-check-MethodAccess :
    ABSTRACT() -> <id>

  is-MethodAccess-with-constructor =
    ?ABSTRACT()

  is-Method-with-constructor =
    fail

  is-MethodAccess-with-constructor =
    fail

  jasmin-check-Method :
    amb([h|hs]) -> <check-Method> h

  jasmin-check-MethodAccess :
    amb([h|hs]) -> <check-MethodAccess> h

  error-Method =
    debug(!"Unexpected constructor. Expected constructor from sort Method instead. ")

  error-MethodAccess =
    debug(!"Unexpected constructor. Expected constructor from sort MethodAccess instead. ")


strategies
  jasmin-check-example =
    jasmin-check-Statement

  jasmin-check-example =
    jasmin-check-Label

  jasmin-check-Statement :
    t1__ -> <id>
    where not(is-Statement-with-constructor)
    where <(check-PCInstruction <+ error-PCInstruction)> t1__

  jasmin-check-Statement :
    t1__ -> <id>
    where not(is-Statement-with-constructor)
    where <(check-Directive <+ error-Directive)> t1__

  jasmin-check-Statement :
    t1__ -> <id>
    where not(is-Statement-with-constructor)
    where <(check-Label <+ error-Label)> t1__

  jasmin-check-Label :
    JBCLabel(t1__) -> <id>
    with <(check-LabelName <+ error-LabelName)> t1__

  is-Label-with-constructor =
    ?JBCLabel(_)

  is-Statement-with-constructor =
    fail

  is-Label-with-constructor =
    fail

  jasmin-check-Statement :
    amb([h|hs]) -> <check-Statement> h

  jasmin-check-Label :
    amb([h|hs]) -> <check-Label> h

  error-Statement =
    debug(!"Unexpected constructor. Expected constructor from sort Statement instead. ")

  error-Label =
    debug(!"Unexpected constructor. Expected constructor from sort Label instead. ")