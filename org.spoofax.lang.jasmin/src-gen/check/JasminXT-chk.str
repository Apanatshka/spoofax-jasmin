module src-gen/check/JasminXT-chk

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  src-gen/signatures/JasminXT-sig


imports
  src-gen/signatures/JasminXT-Whitespace-sig
  src-gen/signatures/JasminXT-Header-sig
  src-gen/signatures/JasminXT-Fields-sig
  src-gen/signatures/JasminXT-Methods-sig


imports
  src-gen/check/JasminXT-Whitespace-chk
  src-gen/check/JasminXT-Header-chk
  src-gen/check/JasminXT-Fields-chk
  src-gen/check/JasminXT-Methods-chk


strategies
  jasmin-check-SDF-start-symbols =
    jasmin-check-Start


strategies
  jasmin-check-example =
    jasmin-check-Start

  jasmin-check-example =
    jasmin-check-JasminFile

  jasmin-check-Start :
    t1__ -> <id>
    where not(is-Start-with-constructor)
    where <(check-JasminFile <+ error-JasminFile)> t1__

  jasmin-check-JasminFile :
    JBCFile(t1__, t2__, t3__) -> <id>
    with <(check-JasminHeader <+ error-JasminHeader)> t1__
    with <map(check-Field <+ error-Field)> t2__
    with <map(check-Method <+ error-Method)> t3__

  is-JasminFile-with-constructor =
    ?JBCFile(_, _, _)

  is-Start-with-constructor =
    fail

  is-JasminFile-with-constructor =
    fail

  jasmin-check-Start :
    amb([h|hs]) -> <check-Start> h

  jasmin-check-JasminFile :
    amb([h|hs]) -> <check-JasminFile> h

  error-Start =
    debug(!"Unexpected constructor. Expected constructor from sort Start instead. ")

  error-JasminFile =
    debug(!"Unexpected constructor. Expected constructor from sort JasminFile instead. ")